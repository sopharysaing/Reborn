/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;
import plugin.Data;

/**
 *
 * @author MacBookPro
 */
public class BooksPayment extends javax.swing.JDialog {

    /**
     * Creates new form BooksPayment
     */
    public BooksPayment(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbMovieTitle = new javax.swing.JLabel();
        lbDate = new javax.swing.JLabel();
        lbTime = new javax.swing.JLabel();
        lbTheatre = new javax.swing.JLabel();
        lbSeat = new javax.swing.JLabel();
        lbPrice = new javax.swing.JLabel();
        movieTitleLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        theatreLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        btnSeat = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();
        txtCustomerName = new javax.swing.JTextField();
        txtCustomerTel = new javax.swing.JTextField();
        lbBooksCode = new javax.swing.JLabel();
        booksCodeLabel = new javax.swing.JLabel();
        priceLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Payment");
        setAlwaysOnTop(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lbMovieTitle.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbMovieTitle.setForeground(new java.awt.Color(51, 51, 51));
        lbMovieTitle.setText("Movie Title");
        lbMovieTitle.setName(""); // NOI18N

        lbDate.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbDate.setForeground(new java.awt.Color(51, 51, 51));
        lbDate.setText("Date");
        lbDate.setName(""); // NOI18N

        lbTime.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbTime.setForeground(new java.awt.Color(51, 51, 51));
        lbTime.setText("Time");
        lbTime.setName(""); // NOI18N

        lbTheatre.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbTheatre.setForeground(new java.awt.Color(51, 51, 51));
        lbTheatre.setText("Theatre");
        lbTheatre.setName(""); // NOI18N

        lbSeat.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbSeat.setForeground(new java.awt.Color(51, 51, 51));
        lbSeat.setText("Seat");
        lbSeat.setName(""); // NOI18N

        lbPrice.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbPrice.setForeground(new java.awt.Color(51, 51, 51));
        lbPrice.setText("Price");
        lbPrice.setName(""); // NOI18N

        movieTitleLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        movieTitleLabel.setForeground(new java.awt.Color(51, 51, 51));
        movieTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        movieTitleLabel.setText("Movie Title");
        movieTitleLabel.setName(""); // NOI18N

        dateLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(51, 51, 51));
        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateLabel.setText("Date");
        dateLabel.setName(""); // NOI18N

        timeLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(51, 51, 51));
        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeLabel.setText("Time");
        timeLabel.setName(""); // NOI18N

        theatreLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        theatreLabel.setForeground(new java.awt.Color(51, 51, 51));
        theatreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        theatreLabel.setText("Theatre");
        theatreLabel.setName(""); // NOI18N

        priceLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        priceLabel.setForeground(new java.awt.Color(51, 51, 51));
        priceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        priceLabel.setText("Price");
        priceLabel.setName(""); // NOI18N
        priceLabel.setPreferredSize(new java.awt.Dimension(120, 45));

        btnSeat.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnSeat.setForeground(new java.awt.Color(51, 51, 51));
        btnSeat.setText("Seat");
        btnSeat.setContentAreaFilled(false);
        btnSeat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSeat.setFocusable(false);
        btnSeat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSeatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSeatMouseExited(evt);
            }
        });

        btnConfirm.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnConfirm.setForeground(new java.awt.Color(51, 51, 51));
        btnConfirm.setText("Confirm");
        btnConfirm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConfirm.setFocusable(false);
        btnConfirm.setPreferredSize(new java.awt.Dimension(150, 50));
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        txtCustomerName.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        txtCustomerName.setForeground(new java.awt.Color(153, 153, 153));
        txtCustomerName.setText("Customer Name");
        txtCustomerName.setCaretColor(new java.awt.Color(51, 51, 51));
        txtCustomerName.setMargin(new java.awt.Insets(2, 10, 2, 2));
        txtCustomerName.setPreferredSize(new java.awt.Dimension(200, 45));
        txtCustomerName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCustomerNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCustomerNameFocusLost(evt);
            }
        });
        txtCustomerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCustomerNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCustomerNameKeyTyped(evt);
            }
        });

        txtCustomerTel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        txtCustomerTel.setForeground(new java.awt.Color(153, 153, 153));
        txtCustomerTel.setText("Telephone Number");
        txtCustomerTel.setCaretColor(new java.awt.Color(51, 51, 51));
        txtCustomerTel.setMargin(new java.awt.Insets(2, 10, 2, 2));
        txtCustomerTel.setPreferredSize(new java.awt.Dimension(200, 45));
        txtCustomerTel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCustomerTelFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCustomerTelFocusLost(evt);
            }
        });
        txtCustomerTel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCustomerTelKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCustomerTelKeyTyped(evt);
            }
        });

        lbBooksCode.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbBooksCode.setForeground(new java.awt.Color(51, 51, 51));
        lbBooksCode.setText("Books Code");
        lbBooksCode.setName(""); // NOI18N

        booksCodeLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        booksCodeLabel.setForeground(new java.awt.Color(51, 51, 51));
        booksCodeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        booksCodeLabel.setText("Books Code");
        booksCodeLabel.setName(""); // NOI18N

        priceLabel1.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        priceLabel1.setForeground(new java.awt.Color(51, 51, 51));
        priceLabel1.setText("$");
        priceLabel1.setName(""); // NOI18N
        priceLabel1.setPreferredSize(new java.awt.Dimension(120, 45));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbMovieTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(lbDate, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(lbTime, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(lbTheatre, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(lbSeat, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(lbPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(lbBooksCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(movieTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(theatreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSeat, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(booksCodeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(priceLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))))
                    .addComponent(txtCustomerName, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                    .addComponent(txtCustomerTel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(movieTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(theatreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbMovieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTime, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTheatre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSeat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbBooksCode, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booksCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtCustomerTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean customerNameDetector = false;
    private boolean customerTelDetector = false;
    
    private void getBooksCode(){
        try {
            Statement statement = Data.getDataConnection().createStatement();
            ResultSet resultSet = statement.executeQuery("SELECT\n" +
            "tblbook.BookCode,\n" +
            "tblbook.ShowDate\n" +
            "FROM\n" +
            "tblbook");
            if (resultSet.first()){
                do {
                    Random randomBooksCode = new Random();
                    int val = randomBooksCode.nextInt(99998)+1;
                    while (val < 10000){
                        val = randomBooksCode.nextInt(99998)+1;
                    }
                    booksCodeLabel.setText(""+val);
                } while (resultSet.next());
            }
            resultSet.close();
            statement.close();
        } catch (Exception e) {
        }
    }
    private float seatPrice = 0;
    private float seatPriceF = 0;
    private float seatPriceB = 0;
    private void getPrice(){
        try {
            float tseatPrice = 0;
            float tseatPriceF = 0;
            float tseatPriceB = 0;
            Statement statement = Data.getDataConnection().createStatement();
            ResultSet resultSet = statement.executeQuery("SELECT\n" +
            "tblschedule.ShowDate,\n" +
            "tblmovie.MovieTitle,\n" +
            "tblmovietype.MovieTypeName,\n" +
            "tbltheatre.ThreatreName,\n" +
            "tbltime.Time,\n" +
            "tblpromotion.PromotionName,\n" +
            "tblpromotion.Discount\n" +
            "FROM\n" +
            "tblschedule\n" +
            "INNER JOIN tblmovie ON tblschedule.MovieID = tblmovie.MovieID\n" +
            "INNER JOIN tblmovietype ON tblmovie.MovieTypeID = tblmovietype.MovieTypeID\n" +
            "INNER JOIN tblscheduledetail ON tblscheduledetail.ScheduleID = tblschedule.ScheduleID\n" +
            "INNER JOIN tbltheatre ON tblscheduledetail.TheatreID = tbltheatre.TheatreID\n" +
            "INNER JOIN tbltime ON tblscheduledetail.TimeID = tbltime.TimeID\n" +
            "INNER JOIN tblpromotion ON tblscheduledetail.PromotionID = tblpromotion.PromotionID");
            if (resultSet.first()){
                do {
                    String dateC = resultSet.getString(1);
                    String movieTitleC = resultSet.getString(2) + " " + resultSet.getString(3);
                    String theatreC = resultSet.getString(4);
                    String timeC = resultSet.getString(5);
                    if (Books.date.equals(dateC) && Books.movieTitle.equals(movieTitleC) && Books.theatre.equals(theatreC) && Books.time.equals(timeC)){
                        // getSeatPrice
                        String input_date="2017-01-09";
                        SimpleDateFormat format1=new SimpleDateFormat("yyyy-MM-DD");
                        Date dt1=format1.parse(input_date);
                        DateFormat format2=new SimpleDateFormat("EEEE"); 
                        String finalDay=format2.format(dt1);
                        System.out.println(finalDay);
                        if (finalDay.equals("Monday") || finalDay.equals("Tuesday") || finalDay.equals("Wednesday") || finalDay.equals("Thursday")){
                            Statement SPstatement = Data.getDataConnection().createStatement();
                            ResultSet SPresultSet = SPstatement.executeQuery("SELECT\n" +
                            "tblweek.WeakID,\n" +
                            "tblweek.WeakName,\n" +
                            "tblweek.P2DNormal,\n" +
                            "tblweek.P3DNormal,\n" +
                            "tblweek.PVIP,\n" +
                            "tblweek.P4DXFront,\n" +
                            "tblweek.P4DXBack\n" +
                            "FROM\n" +
                            "tblweek\n" +
                            "WHERE\n" +
                            "WeakID = 1");
                            if (SPresultSet.first()){
                                do {
                                    if (Books.theatre.equals("4DX")){
                                        tseatPriceF = Float.parseFloat(SPresultSet.getString(6));
                                        tseatPriceB = Float.parseFloat(SPresultSet.getString(7));
                                        seatPriceF = Float.parseFloat(SPresultSet.getString(6));
                                        seatPriceB = Float.parseFloat(SPresultSet.getString(7));
                                    } else if (Books.theatre.equals("VIP")){
                                        tseatPrice = Float.parseFloat(SPresultSet.getString(5));
                                        seatPrice = Float.parseFloat(SPresultSet.getString(5));
                                        for (int i=0; i<Books.selectedSeat.size(); i++){
                                            tseatPrice+=Float.parseFloat(SPresultSet.getString(5));
                                        }
                                        priceLabel.setText(""+tseatPrice);
                                    } else {
                                        if (Books.movieType.equals("2D")){
                                            tseatPrice = Float.parseFloat(SPresultSet.getString(3));
                                            seatPrice = Float.parseFloat(SPresultSet.getString(3));
                                            for (int i=0; i<Books.selectedSeat.size(); i++){
                                                tseatPrice+=Float.parseFloat(SPresultSet.getString(3));
                                            }
                                            priceLabel.setText(""+tseatPrice);
                                        }
                                        else if (Books.movieType.equals("3D")){
                                            tseatPrice = Float.parseFloat(SPresultSet.getString(4));
                                            seatPrice = Float.parseFloat(SPresultSet.getString(4));
                                            for (int i=0; i<Books.selectedSeat.size(); i++){
                                                tseatPrice+=Float.parseFloat(SPresultSet.getString(4));
                                            }
                                            priceLabel.setText(""+tseatPrice);
                                        }
                                    }
                                } while (SPresultSet.next());
                            }
                            SPresultSet.close();
                            SPstatement.close();
                        } else {
                            Statement SPstatement = Data.getDataConnection().createStatement();
                            ResultSet SPresultSet = SPstatement.executeQuery("SELECT\n" +
                            "tblweek.WeakID,\n" +
                            "tblweek.WeakName,\n" +
                            "tblweek.P2DNormal,\n" +
                            "tblweek.P3DNormal,\n" +
                            "tblweek.PVIP,\n" +
                            "tblweek.P4DXFront,\n" +
                            "tblweek.P4DXBack\n" +
                            "FROM\n" +
                            "tblweek\n" +
                            "WHERE\n" +
                            "WeakID = 2");
                            if (SPresultSet.first()){
                                do {
                                    if (Books.theatre.equals("4DX")){
                                        tseatPriceF = Float.parseFloat(SPresultSet.getString(6));
                                        tseatPriceB = Float.parseFloat(SPresultSet.getString(7));
                                        seatPriceF = Float.parseFloat(SPresultSet.getString(6));
                                        seatPriceB = Float.parseFloat(SPresultSet.getString(7));
                                    } else if (Books.theatre.equals("VIP")){
                                        tseatPrice = Float.parseFloat(SPresultSet.getString(5));
                                        seatPrice = Float.parseFloat(SPresultSet.getString(5));
                                        for (int i=0; i<Books.selectedSeat.size(); i++){
                                            tseatPrice+=Float.parseFloat(SPresultSet.getString(5));
                                        }
                                        priceLabel.setText(""+tseatPrice);
                                    } else {
                                        if (Books.movieType.equals("2D")){
                                            tseatPrice = Float.parseFloat(SPresultSet.getString(3));
                                            seatPrice = Float.parseFloat(SPresultSet.getString(3));
                                            for (int i=0; i<Books.selectedSeat.size(); i++){
                                                tseatPrice+=Float.parseFloat(SPresultSet.getString(3));
                                            }
                                            priceLabel.setText(""+tseatPrice);
                                        }
                                        else if (Books.movieType.equals("3D")){
                                            tseatPrice = Float.parseFloat(SPresultSet.getString(4));
                                            seatPrice = Float.parseFloat(SPresultSet.getString(4));
                                            for (int i=0; i<Books.selectedSeat.size(); i++){
                                                tseatPrice+=Float.parseFloat(SPresultSet.getString(4));
                                            }
                                            priceLabel.setText(""+tseatPrice);
                                        }
                                    }
                                } while (SPresultSet.next());
                            }
                            SPresultSet.close();
                            SPstatement.close();
                        }
                        
                    }
                } while (resultSet.next());
            }
            resultSet.close();
            statement.close();
        } catch (Exception e) {
        }
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icon/Form Logo.png")));
        if (!Books.selectedSeat.isEmpty()){
            movieTitleLabel.setText(Books.movieTitle);
            dateLabel.setText(Books.date);
            timeLabel.setText(Books.time);
            theatreLabel.setText(Books.theatre);
            btnSeat.setText(""+Books.selectedSeat);
        }
        getBooksCode();
        getPrice();
    }//GEN-LAST:event_formWindowOpened

    private void txtCustomerNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCustomerNameFocusGained
        if (!customerNameDetector){
            txtCustomerName.setCaretPosition(0);
        }
    }//GEN-LAST:event_txtCustomerNameFocusGained

    private void txtCustomerNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCustomerNameFocusLost
        String text = txtCustomerName.getText().trim();
        if (text.isEmpty()){
            txtCustomerName.setForeground(new Color(153,153,153));
            txtCustomerName.setText("Customer Name");
            customerNameDetector = false;
        }
    }//GEN-LAST:event_txtCustomerNameFocusLost

    private void txtCustomerNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerNameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtCustomerName.grabFocus();
        }
    }//GEN-LAST:event_txtCustomerNameKeyPressed

    private void txtCustomerNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerNameKeyTyped
        txtCustomerName.setForeground(Color.DARK_GRAY);
        if (customerNameDetector == false){
            txtCustomerName.setText("");
            customerNameDetector = true;
        }
    }//GEN-LAST:event_txtCustomerNameKeyTyped

    private void txtCustomerTelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCustomerTelFocusGained
        if (!customerTelDetector){
            txtCustomerTel.setCaretPosition(0);
        }
    }//GEN-LAST:event_txtCustomerTelFocusGained

    private void txtCustomerTelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCustomerTelFocusLost
        String text = txtCustomerTel.getText().trim();
        if (text.isEmpty()){
            txtCustomerTel.setForeground(new Color(153,153,153));
            txtCustomerTel.setText("Telephone Number");
            customerTelDetector = false;
        }
    }//GEN-LAST:event_txtCustomerTelFocusLost

    private void txtCustomerTelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerTelKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtCustomerTel.grabFocus();
        }
    }//GEN-LAST:event_txtCustomerTelKeyPressed

    private void txtCustomerTelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerTelKeyTyped
        txtCustomerTel.setForeground(Color.DARK_GRAY);
        if (customerTelDetector == false){
            txtCustomerTel.setText("");
            customerTelDetector = true;
        }
    }//GEN-LAST:event_txtCustomerTelKeyTyped

    private void btnSeatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSeatMouseEntered
        btnSeat.setForeground(new Color (204,153,0));
    }//GEN-LAST:event_btnSeatMouseEntered

    private void btnSeatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSeatMouseExited
        btnSeat.setForeground(new Color (51,51,51));
    }//GEN-LAST:event_btnSeatMouseExited

    private String scheduleID = "";
    private String booksCode = "";
    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        if (!txtCustomerName.getText().equals("Customer Name")){
            if (!txtCustomerTel.getText().equals("Telephone Number")){
                try {
                    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
                    LocalDateTime now = LocalDateTime.now();
                    String movieTitle = movieTitleLabel.getText().trim();
                    booksCode = booksCodeLabel.getText().trim();
                    String booksDate = ""+dtf.format(now);
                    String showDate = dateLabel.getText().trim();
                    String tAmount = priceLabel.getText().trim();
                    String theatre = theatreLabel.getText().trim();
                    String time = timeLabel.getText().trim();
                    String staffID = Login.staffID;
                    String customerName = txtCustomerName.getText().trim();
                    String customerTel = txtCustomerTel.getText().trim();
                    String customerID = "1";
                    boolean CDetector = true;
                    Statement CNstatement = Data.getDataConnection().createStatement();
                    ResultSet CNresultSet = CNstatement.executeQuery("SELECT * FROM dbmajorcineplex.tblcustomer;");
                    if (CNresultSet.first()){
                        do {
                            String customerNameC = CNresultSet.getString(2);
                            String customerTelC = CNresultSet.getString(3);
                            if (customerName.equals(customerNameC) && customerTel.equals(customerTelC)){
                                CDetector = true;
                            } else {
                                CDetector = false;
                            }
                        } while (CNresultSet.next());
                    }
                    if (!CDetector){
                        System.out.println("Hi");
                        CNstatement.execute("INSERT INTO dbmajorcineplex.tblcustomer (CustomerName, Telephone, CustomerTypeID) VALUES ('"+customerName+"','"+customerTel+"',1);");
                        System.out.println("Hi");
                    }
                    CNresultSet.close();
                    CNstatement.close();
                    Statement CIDstatement = Data.getDataConnection().createStatement();
                    ResultSet CIDresultSet = CIDstatement.executeQuery("SELECT * FROM dbmajorcineplex.tblcustomer WHERE CustomerName = '"+customerName+"' AND Telephone = '"+customerTel+"';");
                    if (CIDresultSet.first()){
                        do {
                            String customerNameC = CIDresultSet.getString(2);
                            String customerTelC = CIDresultSet.getString(3);
                            if (customerName.equals(customerNameC) && customerTel.equals(customerTelC)){
                                customerID = CIDresultSet.getString(1);
                            }
                        } while (CIDresultSet.next());
                    }
                    CIDresultSet.close();
                    CIDstatement.close();
                    System.out.println(customerID + " " +customerName + " " + customerTel);
                    String movieID = "";
                    String theatreID = "";
                    String timeID = "";
                    Statement SIDStatement = Data.getDataConnection().createStatement();
                    ResultSet SIDResultSet = SIDStatement.executeQuery("SELECT\n" +
                    "tblschedule.ScheduleID,\n" +
                    "tblschedule.ShowDate,\n" +
                    "tblmovie.MovieID,\n" +
                    "tblmovie.MovieTitle,\n" +
                    "tblmovietype.MovieTypeName,\n" +
                    "tbltheatre.TheatreID,\n" +
                    "tbltheatre.ThreatreName,\n" +
                    "tbltime.TimeID,\n" +
                    "tbltime.Time\n" +
                    "FROM\n" +
                    "tblschedule\n" +
                    "INNER JOIN tblmovie ON tblschedule.MovieID = tblmovie.MovieID\n" +
                    "INNER JOIN tblmovietype ON tblmovie.MovieTypeID = tblmovietype.MovieTypeID\n" +
                    "INNER JOIN tblscheduledetail ON tblscheduledetail.ScheduleID = tblschedule.ScheduleID\n" +
                    "INNER JOIN tbltheatre ON tblscheduledetail.TheatreID = tbltheatre.TheatreID\n" +
                    "INNER JOIN tbltime ON tblscheduledetail.TimeID = tbltime.TimeID");
                    if (SIDResultSet.first()){
                        do {
                            String movieTitleC = SIDResultSet.getString(4) + " " + SIDResultSet.getString(5);
                            String showDateC = SIDResultSet.getString(2);
                            String theatreC = SIDResultSet.getString(7);
                            String timeC = SIDResultSet.getString(9);
                            if (movieTitle.equals(movieTitleC) && showDate.equals(showDateC) && time.equals(timeC) && theatre.equals(theatreC)){
                                scheduleID = SIDResultSet.getString(1);
                                movieID = SIDResultSet.getString(3);
                                theatreID = SIDResultSet.getString(6);
                                timeID = SIDResultSet.getString(8);
                            }
                        } while(SIDResultSet.next());
                    }
                    SIDResultSet.close();
                    SIDStatement.close();
                    Statement statement = Data.getDataConnection().createStatement();
                    statement.execute("INSERT INTO dbmajorcineplex.tblbook (BookCode,BookDate,ShowDate,TAmount,TDiscount,SubTotal,StaffID,CustomerID,SchduleID,MovieID,TheatreID,TimeID) VALUES "
                            + "                                             ("+booksCode+",'"+booksDate+"','"+showDate+"',"+tAmount+",0,"+tAmount+","+staffID+","+customerID+","+scheduleID+","+movieID+","+theatreID+","+timeID+");");

                    statement.close();
                    insertBooksDetail();
                    Books.created = true;
                    JOptionPane.showMessageDialog(this, "Books Completed!");
                    this.dispose();
                } catch (Exception e) {
                }
            } else
                JOptionPane.showMessageDialog(this, "Please Enter Customer Telephone.");
        } else
            JOptionPane.showMessageDialog(this, "Please Enter Customer Name.");
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void insertBooksDetail(){
        try {
            String bookID = "";
            Statement statement = Data.getDataConnection().createStatement();
            ResultSet resultSet = statement.executeQuery("SELECT\n" +
            "tblbook.BookID,\n" +
            "tblbook.SchduleID,\n" +
            "tblbook.BookCode\n" +
            "FROM\n" +
            "tblbook\n" +
            "WHERE\n" +
            "SchduleID = "+scheduleID+"\n" +
            "AND\n" +
            "BookCode = "+booksCode+"");
            if (resultSet.first()){
                do {
                    bookID = resultSet.getString(1);
                }while(resultSet.next());
            }
            if (!Books.A1Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A1',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A2Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A2',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A3Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A3',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A4Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A4',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A5Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A5',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A6Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A6',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A7Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A7',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A8Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A8',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A9Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A9',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A10Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A10',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A11Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A11',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A12Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A12',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A13Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A13',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A14Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A14',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A15Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A15',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.A16Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'A16',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B1Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B1',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B2Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B2',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B3Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B3',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B4Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B4',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B5Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B5',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B6Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B6',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B7Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B7',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B8Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B8',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B9Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B9',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B10Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B10',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B11Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B11',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B12Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B12',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B13Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B13',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B14Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B14',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B15Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B15',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.B16Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'B16',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C1Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C1',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C2Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C2',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C3Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C3',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C4Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C4',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C5Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C5',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C6Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C6',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C7Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C7',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C8Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C8',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C9Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C9',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C10Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C10',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C11Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C11',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C12Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C12',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C13Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C13',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C14Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C14',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C15Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C15',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.C16Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'C16',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D1Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D1',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D2Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D2',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D3Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D3',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D4Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D4',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D5Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D5',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D6Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D6',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D7Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D7',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D8Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D8',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D9Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D9',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D10Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D10',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D11Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D11',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D12Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D12',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D13Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D13',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D14Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D14',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D15Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D15',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.D16Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'D16',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E1Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E1',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E2Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E2',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E3Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E3',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E4Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E4',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E5Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E5',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E6Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E6',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E7Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E7',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E8Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E8',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E9Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E9',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E10Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E10',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E11Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E11',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E12Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E12',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E13Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E13',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E14Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E14',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E15Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E15',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.E16Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'E16',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F1Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F1',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F2Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F2',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F3Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F3',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F4Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F4',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F5Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F5',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F6Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F6',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F7Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F7',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F8Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F8',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F9Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F9',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F10Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F10',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F11Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F11',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F12Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F12',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F13Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F13',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F14Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F14',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F15Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F15',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.F16Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'F16',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G1Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G1',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G2Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G2',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G3Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G3',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G4Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G4',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G5Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G5',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G6Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G6',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G7Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G7',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G8Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G8',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G9Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G9',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G10Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G10',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G11Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G11',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G12Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G12',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G13Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G13',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G14Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G14',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G15Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G15',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.G16Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'G16',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H1Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H1',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H2Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H2',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H3Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H3',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H4Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H4',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H5Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H5',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H6Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H6',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H7Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H7',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H8Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H8',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H9Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H9',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H10Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H10',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H11Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H11',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H12Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H12',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H13Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H13',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H14Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H14',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H15Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H15',"+seatPrice+",0,"+seatPrice+",'Booked');");
            if (!Books.H16Icon)
                statement.execute("INSERT INTO dbmajorcineplex.tblbookdetail (BookID,SeatNum,Price,Discount,Amount,Status) VALUES ("+bookID+",'H16',"+seatPrice+",0,"+seatPrice+",'Booked');");
            statement.close();
        } catch (Exception e) {
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BooksPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BooksPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BooksPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BooksPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new CreateStaffConfirm().setVisible(true);
                BooksPayment dialog = new BooksPayment(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel booksCodeLabel;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnSeat;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel lbBooksCode;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbMovieTitle;
    private javax.swing.JLabel lbPrice;
    private javax.swing.JLabel lbSeat;
    private javax.swing.JLabel lbTheatre;
    private javax.swing.JLabel lbTime;
    private javax.swing.JLabel movieTitleLabel;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JLabel priceLabel1;
    private javax.swing.JLabel theatreLabel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtCustomerTel;
    // End of variables declaration//GEN-END:variables
}
