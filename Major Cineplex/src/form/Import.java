/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import plugin.Data;
import java.awt.Color;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import plugin.PanDateAlwaysOnTop;

/**
 *
 * @author MacBookPro
 */
public class Import extends javax.swing.JFrame {

    /**
     * Creates new form MovieList
     */
    public Import() {
        initComponents();
        addDocumentListener();
        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new tableformajorcineplex.TableForMajorCineplex();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        lbStaff = new javax.swing.JLabel();
        lbDate = new javax.swing.JLabel();
        txtImportDate = new textfieldformajorcineplex.TextFieldForMajorCineplex();
        btnSelectDate = new javax.swing.JButton();
        txtInvoiceDate = new textfieldformajorcineplex.TextFieldForMajorCineplex();
        btnSelectDate1 = new javax.swing.JButton();
        textFieldForMajorCineplex3 = new textfieldformajorcineplex.TextFieldForMajorCineplex();
        btnCreateSupplier = new javax.swing.JButton();
        textFieldForMajorCineplex4 = new textfieldformajorcineplex.TextFieldForMajorCineplex();
        cbSelectStaff1 = new javax.swing.JComboBox<>();
        btnSelectDate3 = new javax.swing.JButton();
        cbSelectStaff2 = new javax.swing.JComboBox<>();
        textFieldForMajorCineplex5 = new textfieldformajorcineplex.TextFieldForMajorCineplex();
        textFieldForMajorCineplex6 = new textfieldformajorcineplex.TextFieldForMajorCineplex();
        jLabel3 = new javax.swing.JLabel();
        cbSelectSupplier = new widecombobox.WideComboBox();
        txtSearch = new textfieldformajorcineplex.TextFieldForMajorCineplex();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Import Product");
        setAlwaysOnTop(true);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        table.setForeground(new java.awt.Color(51, 51, 51));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Product", "Qty", "Cost", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setFocusable(false);
        table.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        table.setIntercellSpacing(new java.awt.Dimension(0, 0));
        table.setPreferredSize(new java.awt.Dimension(1041, 0));
        table.setRowHeight(25);
        table.setShowHorizontalLines(false);
        table.setShowVerticalLines(false);
        table.getTableHeader().setResizingAllowed(false);
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table);

        btnAdd.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(51, 51, 51));
        btnAdd.setText("Add");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.setFocusable(false);
        btnAdd.setPreferredSize(new java.awt.Dimension(100, 45));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnClear.setForeground(new java.awt.Color(51, 51, 51));
        btnClear.setText("Edit");
        btnClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClear.setFocusable(false);
        btnClear.setPreferredSize(new java.awt.Dimension(100, 45));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(51, 51, 51));
        btnDelete.setText("Delete");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.setFocusable(false);
        btnDelete.setPreferredSize(new java.awt.Dimension(100, 45));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnSave.setForeground(new java.awt.Color(51, 51, 51));
        btnSave.setText("Save");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.setFocusable(false);
        btnSave.setPreferredSize(new java.awt.Dimension(100, 45));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lbStaff.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        lbStaff.setText("Staff :");

        lbDate.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        lbDate.setText("Date :");

        txtImportDate.setText("Import Date");
        txtImportDate.setToolTipText("");
        txtImportDate.setPreferredSize(new java.awt.Dimension(200, 45));
        txtImportDate.setTxtLabel("Import Date");

        btnSelectDate.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnSelectDate.setForeground(new java.awt.Color(51, 51, 51));
        btnSelectDate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/iconScheduleBlack.png"))); // NOI18N
        btnSelectDate.setContentAreaFilled(false);
        btnSelectDate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSelectDate.setFocusable(false);
        btnSelectDate.setPreferredSize(new java.awt.Dimension(45, 45));
        btnSelectDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectDateActionPerformed(evt);
            }
        });

        txtInvoiceDate.setText("Invoice Date");
        txtInvoiceDate.setToolTipText("");
        txtInvoiceDate.setPreferredSize(new java.awt.Dimension(200, 45));
        txtInvoiceDate.setTxtLabel("Invoice Date");

        btnSelectDate1.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnSelectDate1.setForeground(new java.awt.Color(51, 51, 51));
        btnSelectDate1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/iconScheduleBlack.png"))); // NOI18N
        btnSelectDate1.setContentAreaFilled(false);
        btnSelectDate1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSelectDate1.setFocusable(false);
        btnSelectDate1.setPreferredSize(new java.awt.Dimension(45, 45));
        btnSelectDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectDate1ActionPerformed(evt);
            }
        });

        textFieldForMajorCineplex3.setText("Invoice No");
        textFieldForMajorCineplex3.setToolTipText("");
        textFieldForMajorCineplex3.setPreferredSize(new java.awt.Dimension(200, 45));
        textFieldForMajorCineplex3.setTxtLabel("Invoice No");

        btnCreateSupplier.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnCreateSupplier.setForeground(new java.awt.Color(51, 51, 51));
        btnCreateSupplier.setText("+");
        btnCreateSupplier.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCreateSupplier.setFocusable(false);
        btnCreateSupplier.setPreferredSize(new java.awt.Dimension(45, 45));
        btnCreateSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateSupplierActionPerformed(evt);
            }
        });

        textFieldForMajorCineplex4.setText("Bar Code");
        textFieldForMajorCineplex4.setToolTipText("");
        textFieldForMajorCineplex4.setPreferredSize(new java.awt.Dimension(200, 45));
        textFieldForMajorCineplex4.setTxtLabel("Bar Code");

        cbSelectStaff1.setEditable(true);
        cbSelectStaff1.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        cbSelectStaff1.setForeground(new java.awt.Color(153, 153, 153));
        cbSelectStaff1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   Product" }));
        cbSelectStaff1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbSelectStaff1.setPreferredSize(new java.awt.Dimension(200, 45));
        cbSelectStaff1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSelectStaff1ActionPerformed(evt);
            }
        });

        btnSelectDate3.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnSelectDate3.setForeground(new java.awt.Color(51, 51, 51));
        btnSelectDate3.setText("+");
        btnSelectDate3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSelectDate3.setFocusable(false);
        btnSelectDate3.setPreferredSize(new java.awt.Dimension(45, 45));
        btnSelectDate3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectDate3ActionPerformed(evt);
            }
        });

        cbSelectStaff2.setEditable(true);
        cbSelectStaff2.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        cbSelectStaff2.setForeground(new java.awt.Color(153, 153, 153));
        cbSelectStaff2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   Type" }));
        cbSelectStaff2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbSelectStaff2.setPreferredSize(new java.awt.Dimension(200, 45));
        cbSelectStaff2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSelectStaff2ActionPerformed(evt);
            }
        });

        textFieldForMajorCineplex5.setText("Qty");
        textFieldForMajorCineplex5.setToolTipText("");
        textFieldForMajorCineplex5.setPreferredSize(new java.awt.Dimension(154, 45));
        textFieldForMajorCineplex5.setTxtLabel("Qty");

        textFieldForMajorCineplex6.setText("Cost");
        textFieldForMajorCineplex6.setToolTipText("");
        textFieldForMajorCineplex6.setPreferredSize(new java.awt.Dimension(154, 45));
        textFieldForMajorCineplex6.setTxtLabel("Cost");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel3.setText("Record :");

        cbSelectSupplier.setForeground(new java.awt.Color(51, 51, 51));
        cbSelectSupplier.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "   Supplier" }));
        cbSelectSupplier.setFocusable(false);
        cbSelectSupplier.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N

        txtSearch.setText("Search");
        txtSearch.setTxtLabel("Search");
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDate)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtImportDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSelectDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(textFieldForMajorCineplex3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textFieldForMajorCineplex4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbSelectStaff1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSelectDate3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbSelectStaff2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(textFieldForMajorCineplex5, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(textFieldForMajorCineplex6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtInvoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSelectDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbSelectSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(btnCreateSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lbStaff)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1)))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbStaff)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbDate)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtImportDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textFieldForMajorCineplex3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtInvoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSelectDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCreateSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbSelectSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldForMajorCineplex4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSelectStaff1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSelectDate3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSelectStaff2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textFieldForMajorCineplex5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldForMajorCineplex6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean imDateDetector = false;
    private boolean inDateDetector = false;
    
    Vector originalTableModel;
    DocumentListener documentListener;
    private void addDocumentListener() {
        documentListener = new DocumentListener() {
            public void changedUpdate(DocumentEvent documentEvent) {
                search();
            }

            public void insertUpdate(DocumentEvent documentEvent) {
                search();
            }

            public void removeUpdate(DocumentEvent documentEvent) {
                search();
            }

            private void search() {
                searchTableContents(txtSearch.getText());
            }
        };
    }

    
    public void searchTableContents(String searchString) {    
        try {
            DefaultTableModel currtableModel = (DefaultTableModel) table.getModel();
            //To empty the table before search
            currtableModel.setRowCount(0);
            //To search for contents from original table content
            for (Object rows : originalTableModel) {
                Vector rowVector = (Vector) rows;
                for (Object column : rowVector) {
                    if (column.toString().contains(searchString)) {
                        //content found so adding to table
                        currtableModel.addRow(rowVector);
                        break;
                    }
                }

            }
        } catch (Exception e) {
        }
    }
    
    private void tableColumn (){
        try {
            Statement statement = Data.getDataConnection().createStatement();
            ResultSet resultSetColumn = statement.executeQuery("DESCRIBE dbmajorcineplex.dbvListMovie");
            table.addRowResultSet(resultSetColumn);
            resultSetColumn.close();
            statement.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
    private void tableRow (){
        try {
            Statement statement = Data.getDataConnection().createStatement();
            ResultSet resultSetRow = statement.executeQuery("SELECT\n" +
            "tblmovie.MovieID,\n" +
            "tblmovie.MovieTitle,\n" +
            "tblmovietype.MovieTypeName,\n" +
            "tblmovie.Runningtime,\n" +
            "tbllanguage.LanguageName,\n" +
            "tblmovie.Source\n" +
            "FROM\n" +
            "tblmovie\n" +
            "INNER JOIN tblmovietype ON tblmovie.MovieTypeID = tblmovietype.MovieTypeID\n" +
            "INNER JOIN tbllanguage ON tblmovie.LanguageID = tbllanguage.LanguageID");
            table.setRowCount(0);
            table.addRowResultSet(resultSetRow);
            resultSetRow.close();
            statement.close();
            originalTableModel = (Vector) ((DefaultTableModel) table.getModel()).getDataVector().clone();
        } catch (Exception e) {
        }
    }
    
    private void getSupplier(){
        try {
            Statement statement = Data.getDataConnection().createStatement();
            ResultSet resultSet = statement.executeQuery("SELECT\n" +
            "tblsupplier.SupplierName,\n" +
            "tblsupplier.ContactName\n" +
            "FROM\n" +
            "tblsupplier");
            cbSelectSupplier.removeAllItems();
            cbSelectSupplier.addItem("   Supplier");
            if (resultSet.first()){
                do {
                    cbSelectSupplier.addItem("   "+resultSet.getString(1)+" ("+resultSet.getString(2)+")");
                } while (resultSet.next());
            }
            resultSet.close();
            statement.close();
        } catch (Exception e) {
        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icon/Form Logo.png")));
        DefaultTableCellRenderer defaultTableCellRenderer = new DefaultTableCellRenderer();
        defaultTableCellRenderer.setHorizontalAlignment(0);
        for (int i=0; i<table.getColumnCount(); i++)
            table.getColumnModel().getColumn(i).setCellRenderer(defaultTableCellRenderer);
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate localDate = LocalDate.now();
        //System.out.println(dtf.format(localDate));
        lbStaff.setText("Staff : "+Login.usernameForLabel);
        lbDate.setText("Date : "+dtf.format(localDate));
        //tableColumn();
        //tableRow();
        getSupplier();
    }//GEN-LAST:event_formWindowOpened

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        table.clearSelection();
    }//GEN-LAST:event_formMouseClicked

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        if (txtSearch.getText().trim().equals("Search"))
            tableRow();
        getSupplier();
    }//GEN-LAST:event_formWindowGainedFocus

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            if (table.getRowCount() > 0){
                Statement statement = Data.getDataConnection().createStatement();
                for (int i=0; i<table.getRowCount(); i++){
                    statement.execute("INSERT INTO dbmajorcineplex.tblholiday(HolidayDate,HolidayDescription) VALUES ('"+table.getValueAt(i, 1)+"','"+table.getValueAt(i, 2)+"');");
                }
                statement.close();
                table.setRowCount(0);
                btnClearActionPerformed(null);
                JOptionPane.showMessageDialog(this, "Saved!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_btnSaveActionPerformed
    PanDateAlwaysOnTop imDate;
    private void btnSelectDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectDateActionPerformed
        long millCurrent1 = System.currentTimeMillis();
        imDate = new PanDateAlwaysOnTop(null, true);
        imDate.setLocation(btnSelectDate);
        imDate.setVisible(true);
        long millDOB = imDate.getDate().getTime();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");
        txtImportDate.setForeground(Color.DARK_GRAY);
        imDateDetector = true;
        txtImportDate.setText(simpleDateFormat.format(imDate.getDate()));        
    }//GEN-LAST:event_btnSelectDateActionPerformed
    PanDateAlwaysOnTop inDate;
    private void btnSelectDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectDate1ActionPerformed
        long millCurrent1 = System.currentTimeMillis();
        inDate = new PanDateAlwaysOnTop(null, true);
        inDate.setLocation(btnSelectDate);
        inDate.setVisible(true);
        long millDOB = inDate.getDate().getTime();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");
        txtInvoiceDate.setForeground(Color.DARK_GRAY);
        inDateDetector = true;
        txtInvoiceDate.setText(simpleDateFormat.format(inDate.getDate())); 
    }//GEN-LAST:event_btnSelectDate1ActionPerformed

    private void btnCreateSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateSupplierActionPerformed
        CreateSupplier.main(null);
    }//GEN-LAST:event_btnCreateSupplierActionPerformed

    private void cbSelectStaff1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSelectStaff1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSelectStaff1ActionPerformed

    private void btnSelectDate3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectDate3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSelectDate3ActionPerformed

    private void cbSelectStaff2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSelectStaff2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSelectStaff2ActionPerformed

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        if (txtSearch.getText().trim().equals("")){
            tableRow();
        } else
        txtSearch.getDocument().addDocumentListener(documentListener);
    }//GEN-LAST:event_txtSearchKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Import.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Import.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Import.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Import.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Import().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCreateSupplier;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSelectDate;
    private javax.swing.JButton btnSelectDate1;
    private javax.swing.JButton btnSelectDate3;
    private javax.swing.JComboBox<String> cbSelectStaff1;
    private javax.swing.JComboBox<String> cbSelectStaff2;
    private widecombobox.WideComboBox cbSelectSupplier;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbStaff;
    private tableformajorcineplex.TableForMajorCineplex table;
    private textfieldformajorcineplex.TextFieldForMajorCineplex textFieldForMajorCineplex3;
    private textfieldformajorcineplex.TextFieldForMajorCineplex textFieldForMajorCineplex4;
    private textfieldformajorcineplex.TextFieldForMajorCineplex textFieldForMajorCineplex5;
    private textfieldformajorcineplex.TextFieldForMajorCineplex textFieldForMajorCineplex6;
    private textfieldformajorcineplex.TextFieldForMajorCineplex txtImportDate;
    private textfieldformajorcineplex.TextFieldForMajorCineplex txtInvoiceDate;
    private textfieldformajorcineplex.TextFieldForMajorCineplex txtSearch;
    // End of variables declaration//GEN-END:variables
}
