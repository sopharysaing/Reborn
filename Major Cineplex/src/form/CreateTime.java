/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import plugin.Data;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.TableView;
import javax.xml.transform.Result;
import plugin.PanDateAlwaysOnTop;

/**
 *
 * @author MacBookPro
 */
public class CreateTime extends javax.swing.JDialog {

    /**
     * Creates new form CreateMovie
     */
    public CreateTime(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Create Time");
        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new tableformajorcineplex.TableForMajorCineplex();
        btnSave = new javax.swing.JButton();
        cbSelectHour = new javax.swing.JComboBox<>();
        cbSelectMinute = new javax.swing.JComboBox<>();
        cbSelectShift = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Create Holiday Event");
        setAlwaysOnTop(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(51, 51, 51));
        btnAdd.setText("Add");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.setFocusable(false);
        btnAdd.setPreferredSize(new java.awt.Dimension(100, 50));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnClear.setForeground(new java.awt.Color(51, 51, 51));
        btnClear.setText("Clear");
        btnClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClear.setFocusable(false);
        btnClear.setPreferredSize(new java.awt.Dimension(100, 50));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(51, 51, 51));
        btnDelete.setText("Delete");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.setFocusable(false);
        btnDelete.setPreferredSize(new java.awt.Dimension(100, 50));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time ID", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setFocusable(false);
        table.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        table.setIntercellSpacing(new java.awt.Dimension(0, 0));
        table.setRowHeight(25);
        table.setShowHorizontalLines(false);
        table.setShowVerticalLines(false);
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table);

        btnSave.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnSave.setForeground(new java.awt.Color(51, 51, 51));
        btnSave.setText("Save");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.setFocusable(false);
        btnSave.setPreferredSize(new java.awt.Dimension(100, 50));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        cbSelectHour.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        cbSelectHour.setForeground(new java.awt.Color(51, 51, 51));
        cbSelectHour.setMaximumRowCount(13);
        cbSelectHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   Hour" }));
        cbSelectHour.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbSelectHour.setFocusable(false);
        cbSelectHour.setPreferredSize(new java.awt.Dimension(100, 45));
        cbSelectHour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSelectHourActionPerformed(evt);
            }
        });

        cbSelectMinute.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        cbSelectMinute.setForeground(new java.awt.Color(51, 51, 51));
        cbSelectMinute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   Minute" }));
        cbSelectMinute.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbSelectMinute.setFocusable(false);
        cbSelectMinute.setPreferredSize(new java.awt.Dimension(100, 45));
        cbSelectMinute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSelectMinuteActionPerformed(evt);
            }
        });

        cbSelectShift.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        cbSelectShift.setForeground(new java.awt.Color(51, 51, 51));
        cbSelectShift.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   Am", "   Pm" }));
        cbSelectShift.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbSelectShift.setFocusable(false);
        cbSelectShift.setPreferredSize(new java.awt.Dimension(100, 45));
        cbSelectShift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSelectShiftActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbSelectHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbSelectMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136)
                        .addComponent(cbSelectShift, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSelectHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSelectMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSelectShift, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void createTime(){
        for (int i=1; i<=9; i++){
            cbSelectHour.addItem("   0"+i);
        }
        cbSelectHour.addItem("   10");
        cbSelectHour.addItem("   11");
        cbSelectHour.addItem("   12");
        for (int i=0; i<=9; i++){
            cbSelectMinute.addItem("   0"+i);
            
        }
        for (int i=1; i<=5; i++){
            for (int j=0; j<10; j++){
                cbSelectMinute.addItem("   "+i+j);
                
            }
        }
        //for(int i=1; i<1;i++){
        //    cbSelectShift.addItem("   "+"Am");
        //    cbSelectShift.addItem("   "+"Pm");
        //}
    
    }
        private int counter = 0;    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icon/Form Logo.png")));
        DefaultTableCellRenderer defaultTableCellRenderer = new DefaultTableCellRenderer();
        defaultTableCellRenderer.setHorizontalAlignment(0);
        for (int i=0; i<table.getColumnCount(); i++)
            table.getColumnModel().getColumn(i).setCellRenderer(defaultTableCellRenderer);
        try{
            Statement statement = Data.getDataConnection().createStatement();
            ResultSet resultSet = statement.executeQuery("SELECT * FROM dbmajorcineplex.tbltime ORDER BY TimeID DESC LIMIT 1;" );
            String timeIDString = "";
            int timeID = 0;
            if (resultSet.first()){
                do {
                    timeIDString = resultSet.getString(1);
                } while (resultSet.next());
                timeID = 1+Integer.valueOf(timeIDString);
            } else 
                timeID = 1;
            counter = timeID;
            resultSet.close();
            statement.close();
        }   catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        createTime();
    }//GEN-LAST:event_formWindowOpened

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if(!cbSelectHour.getSelectedItem().equals("   Hour")){
            if(!cbSelectMinute.getSelectedItem().equals("   Minute")){
                try {
                    int hour = Integer.valueOf(cbSelectHour.getSelectedItem().toString().trim());
                    String mn = cbSelectMinute.getSelectedItem().toString().trim();
                    if (cbSelectShift.getSelectedIndex() == 1){
                        hour += 12;
                    }
                    String time =hour+":"+mn+":00";
                    DefaultTableModel defaultTableModel = (DefaultTableModel)table.getModel();
                    String st[] = {" ",time};
                    defaultTableModel.addRow(st);
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);    
                } 
            }else{
                JOptionPane.showMessageDialog(this, "Please Choose Minute.");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Please Choose Hour." );
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
            cbSelectHour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "   Hour" }));
            cbSelectMinute.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "   Minute" }));
            createTime();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
        
        Statement statement = Data.getDataConnection().createStatement();
        for (int i=0; i<table.getRowCount(); i++){
            String hour = cbSelectHour.getSelectedItem().toString().trim();
            String mn = cbSelectMinute.getSelectedItem().toString().trim();
            String shift = cbSelectShift.getSelectedItem().toString().trim();
            
            String time =hour+":"+mn+":00";
            statement.execute("INSERT INTO tbltime(time)VALUE('"+time+"')");
            statement.close();
            DefaultTableModel defaultTableModel = (DefaultTableModel)table.getModel();
            defaultTableModel.setRowCount(0);
            JOptionPane.showMessageDialog(this, "Already Committed!");
            cbSelectHour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "   Hour" }));
            cbSelectMinute.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "   Minute" }));
           cbSelectShift.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "   Am" }));
          
        }
        //statement.execute("INSERT INTO tbltime (Time) VALUES ('"+hour+"',"+minute+","+upricein+","+upriceout+","+cid+");");        
                } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
          createTime();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void cbSelectHourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSelectHourActionPerformed
        
    }//GEN-LAST:event_cbSelectHourActionPerformed

    private void cbSelectMinuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSelectMinuteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSelectMinuteActionPerformed

    private void cbSelectShiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSelectShiftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSelectShiftActionPerformed
    PanDateAlwaysOnTop dob;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new CreateStaffConfirm().setVisible(true);
                CreateTime dialog = new CreateTime(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbSelectHour;
    private javax.swing.JComboBox<String> cbSelectMinute;
    private javax.swing.JComboBox<String> cbSelectShift;
    private javax.swing.JScrollPane jScrollPane1;
    private tableformajorcineplex.TableForMajorCineplex table;
    // End of variables declaration//GEN-END:variables
}
