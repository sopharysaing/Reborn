/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileFilter;
import java.text.SimpleDateFormat;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static form.CreateMovie.status;
import java.sql.ResultSet;
import java.sql.Statement;
import plugin.Data;
import plugin.DataConnection;
import plugin.PanDateAlwaysOnTop;

/**
 *
 * @author MacBookPro
 */
public class CreateStaff extends javax.swing.JFrame {

    /**
     * Creates new form CreateMovie
     */
    public CreateStaff() {
        initComponents();
        txtName.setForeground(new Color(153,153,153));
        txtSalary.setForeground(new Color(153,153,153));
        txtTelephone.setForeground(new Color(153,153,153));
        txtEmail.setForeground(new Color(153,153,153));
        //txtActor.setForeground(new Color(153,153,153));
        //txtSource.setForeground(new Color(153,153,153));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbProfilePhoto = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtSalary = new textfieldformajorcineplex.TextFieldForMajorCineplex();
        txtTelephone = new textfieldformajorcineplex.TextFieldForMajorCineplex();
        rbMale = new javax.swing.JRadioButton();
        rbFemale = new javax.swing.JRadioButton();
        cbSelectPosition = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        txtDateofBirth = new javax.swing.JTextField();
        btnSelectDate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnInsertProfilePhoto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Create Staff");
        setAlwaysOnTop(true);
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lbProfilePhoto.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lbProfilePhoto.setForeground(new java.awt.Color(51, 51, 51));
        lbProfilePhoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbProfilePhoto.setText("Profile Photo [207 X 311]");
        lbProfilePhoto.setPreferredSize(new java.awt.Dimension(311, 207));

        txtName.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        txtName.setForeground(new java.awt.Color(153, 153, 153));
        txtName.setText("Full Name");
        txtName.setCaretColor(new java.awt.Color(51, 51, 51));
        txtName.setMargin(new java.awt.Insets(2, 10, 2, 10));
        txtName.setPreferredSize(new java.awt.Dimension(200, 45));
        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameFocusLost(evt);
            }
        });
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });

        txtEmail.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(153, 153, 153));
        txtEmail.setText("Email");
        txtEmail.setCaretColor(new java.awt.Color(51, 51, 51));
        txtEmail.setMargin(new java.awt.Insets(2, 10, 2, 10));
        txtEmail.setPreferredSize(new java.awt.Dimension(200, 45));
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmailKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailKeyTyped(evt);
            }
        });

        txtSalary.setText("Salary");
        txtSalary.setNumber(true);
        txtSalary.setPreferredSize(new java.awt.Dimension(125, 45));
        txtSalary.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSalaryFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSalaryFocusLost(evt);
            }
        });
        txtSalary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSalaryKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSalaryKeyTyped(evt);
            }
        });

        txtTelephone.setText("Telephone ");
        txtTelephone.setToolTipText("");
        txtTelephone.setNumber(true);
        txtTelephone.setPreferredSize(new java.awt.Dimension(125, 45));
        txtTelephone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelephoneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelephoneFocusLost(evt);
            }
        });
        txtTelephone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelephoneKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelephoneKeyTyped(evt);
            }
        });

        rbMale.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        rbMale.setForeground(new java.awt.Color(51, 51, 51));
        rbMale.setText("Male");
        rbMale.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rbMale.setFocusable(false);
        rbMale.setIconTextGap(10);
        rbMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMaleActionPerformed(evt);
            }
        });

        rbFemale.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        rbFemale.setForeground(new java.awt.Color(51, 51, 51));
        rbFemale.setText("Female");
        rbFemale.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rbFemale.setFocusable(false);
        rbFemale.setIconTextGap(10);
        rbFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFemaleActionPerformed(evt);
            }
        });

        cbSelectPosition.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        cbSelectPosition.setForeground(new java.awt.Color(51, 51, 51));
        cbSelectPosition.setMaximumRowCount(12);
        cbSelectPosition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   Position" }));
        cbSelectPosition.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbSelectPosition.setFocusable(false);
        cbSelectPosition.setPreferredSize(new java.awt.Dimension(200, 45));
        cbSelectPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSelectPositionActionPerformed(evt);
            }
        });

        txtAddress.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        txtAddress.setForeground(new java.awt.Color(153, 153, 153));
        txtAddress.setLineWrap(true);
        txtAddress.setRows(1);
        txtAddress.setTabSize(4);
        txtAddress.setText("Address");
        txtAddress.setMargin(new java.awt.Insets(10, 10, 10, 10));
        txtAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAddressFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAddressFocusLost(evt);
            }
        });
        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAddressKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddressKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtAddress);

        txtDateofBirth.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        txtDateofBirth.setForeground(new java.awt.Color(153, 153, 153));
        txtDateofBirth.setText("Date of Birth");
        txtDateofBirth.setCaretColor(new java.awt.Color(51, 51, 51));
        txtDateofBirth.setMargin(new java.awt.Insets(2, 10, 2, 10));
        txtDateofBirth.setPreferredSize(new java.awt.Dimension(200, 45));
        txtDateofBirth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDateofBirthFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDateofBirthFocusLost(evt);
            }
        });
        txtDateofBirth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDateofBirthKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDateofBirthKeyTyped(evt);
            }
        });

        btnSelectDate.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnSelectDate.setForeground(new java.awt.Color(51, 51, 51));
        btnSelectDate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/iconScheduleBlack.png"))); // NOI18N
        btnSelectDate.setContentAreaFilled(false);
        btnSelectDate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSelectDate.setFocusable(false);
        btnSelectDate.setPreferredSize(new java.awt.Dimension(45, 45));
        btnSelectDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectDateActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnClear.setForeground(new java.awt.Color(51, 51, 51));
        btnClear.setText("Clear");
        btnClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClear.setFocusable(false);
        btnClear.setPreferredSize(new java.awt.Dimension(150, 50));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnCreate.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(51, 51, 51));
        btnCreate.setText("Create");
        btnCreate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCreate.setFocusable(false);
        btnCreate.setPreferredSize(new java.awt.Dimension(150, 50));
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnInsertProfilePhoto.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnInsertProfilePhoto.setForeground(new java.awt.Color(51, 51, 51));
        btnInsertProfilePhoto.setText("Insert Profile Photo");
        btnInsertProfilePhoto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInsertProfilePhoto.setFocusable(false);
        btnInsertProfilePhoto.setPreferredSize(new java.awt.Dimension(150, 50));
        btnInsertProfilePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertProfilePhotoActionPerformed(evt);
            }
        });

        try{String quary    =   "SELECT positionname FROM dbmajorcineplex.tblposition";
            Statement statement = Data.getDataConnection().createStatement();
            ResultSet rs =  statement.executeQuery(quary);

            if (rs.first())
            do {
                cbSelectPosition.addItem(rs.getString(1));

            } while (rs.next());
            rs.close();
            statement.close();
        } catch (Exception e) {
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbProfilePhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnInsertProfilePhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(cbSelectPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtDateofBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnSelectDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(rbMale)
                            .addGap(18, 18, 18)
                            .addComponent(rbFemale)
                            .addGap(18, 18, 18)
                            .addComponent(txtTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbMale, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDateofBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSelectDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbSelectPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbProfilePhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnInsertProfilePhoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean nameDetector = false;
    private boolean genderDetector = false;
    private boolean telephoneDetector = false;
    private boolean emailDetector = false;
    private boolean dateofbirthDetector = false;
    private boolean positionDetector = false;
    private boolean addressDetector = false;
    public static boolean created = false;
    
    
    public static String profilePhotoPath = "";
    public static String name = "";
    public static String gender = "";
    public static String telephone = "";
    public static String email = "";
    public static String dateofbirth = "";
    public static String position = "";
    public static String status = "";
    public static String salary = "";
    public static String address = "";
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened


        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icon/Form Logo.png")));
    }//GEN-LAST:event_formWindowOpened

    private void txtNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusGained
        if (!nameDetector){
            txtName.setCaretPosition(0);
        }
    }//GEN-LAST:event_txtNameFocusGained

    private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost
        String text = txtName.getText().trim();
        if (text.isEmpty()){
            txtName.setForeground(new Color(153,153,153));
            txtName.setText("Full Name");
            nameDetector = false;
        }
    }//GEN-LAST:event_txtNameFocusLost

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtName.grabFocus();
        }
    }//GEN-LAST:event_txtNameKeyPressed

    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped
        txtName.setForeground(Color.DARK_GRAY);
        if (nameDetector == false){
            txtName.setText("");
            nameDetector = true;
        }
    }//GEN-LAST:event_txtNameKeyTyped

    private void btnInsertProfilePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertProfilePhotoActionPerformed
//        try {
//            Image image = ImageIO.read(getClass().getReposition("/poster/Spider Man Homecoming.png"));
//            lbMoviePoster.setIcon(new ImageIcon(image));
//        } catch (Exception e) {
//        }
        try {
            JFileChooser fileChooser = new JFileChooser("src/staffprofile");
            FileFilter fileFilter = new FileFilter() {
                @Override
                public boolean accept(File file) {
                    String name = file.getName().toLowerCase();
                    if (file.isDirectory())
                        return  true;
                    else if (name.endsWith(".png") || name.endsWith(".jpg"))
                        return true;
                    return false;
                    //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }
            };
            int click = fileChooser.showOpenDialog(this);
            if (click == JFileChooser.APPROVE_OPTION){
                File file = fileChooser.getSelectedFile();
                String profilePhoto = "/staffprofile/"+file.getName();
                System.out.println(profilePhoto);
                Image image = ImageIO.read(getClass().getResource(profilePhoto));
                lbProfilePhoto.setIcon(new ImageIcon(image));
                profilePhotoPath = profilePhoto;
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnInsertProfilePhotoActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        try {
            if (!lbProfilePhoto.getIcon().equals(null)){
                if (nameDetector){
                    if (genderDetector){
                        if (telephoneDetector){
                            if (emailDetector){
                                if (dateofbirthDetector){
                                    if (!cbSelectPosition.getSelectedItem().equals("   Position")){
                                        if (addressDetector){
                                            name = txtName.getText().trim();
                                            if (rbMale.isSelected())
                                                gender = rbMale.getText();
                                            else
                                            gender = rbFemale.getText();
                                            email = txtEmail.getText().trim();
                                            salary = txtSalary.getText().trim();
                                            telephone = txtTelephone.getText().trim();
                                            position = cbSelectPosition.getSelectedItem().toString().trim();
                                            status = "Active";
                                            dateofbirth = txtDateofBirth.getText().trim();
                                            address = txtAddress.getText().trim();
                                            //this.setVisible(false);
                                            CreateStaffConfirm.main(null);
                                        } else
                                            JOptionPane.showMessageDialog(this, "Please Insert Current Address.");
                                    } else 
                                        JOptionPane.showMessageDialog(this, "Please Select Position.");
                                } else 
                                    JOptionPane.showMessageDialog(this, "Please Select Date of Birth.");
                            } else 
                                JOptionPane.showMessageDialog(this, "Please Insert Email Address.");
                        } else 
                            JOptionPane.showMessageDialog(this, "Please Insert Telephone.");
                    } else 
                        JOptionPane.showMessageDialog(this, "Please Select Gender.");
                } else 
                    JOptionPane.showMessageDialog(this, "Please Insert Full Name.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please Insert Profile Photo.");
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
//        try {
//            Image image = ImageIO.read(getClass().getReposition("/poster/Captain America - Civil War.png"));
//            lbMoviePoster.setIcon(new ImageIcon(image));
//        } catch (Exception e) {
//        }
        lbProfilePhoto.setIcon(null);
        txtName.setText("");
        txtNameFocusLost(null);
        rbMale.setSelected(false);
        rbFemale.setSelected(false);
        txtSalary.setText("");
        txtSalaryFocusLost(null);
        txtTelephone.setText("");
        txtTelephoneFocusLost(null);
        txtEmail.setText("");
        txtEmailFocusLost(null);
        txtAddress.setText("");
        txtAddressFocusLost(null);
        txtDateofBirth.setText("");
        txtDateofBirthFocusLost(null);
        nameDetector = false;
        txtName.grabFocus();
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtTelephoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelephoneFocusLost
        String text = txtTelephone.getText().trim();
        if (text.isEmpty()){
            txtTelephone.setForeground(new Color(153,153,153));
            txtTelephone.setText("Telephone");
            telephoneDetector = false;
        }
    }//GEN-LAST:event_txtTelephoneFocusLost

    private void txtTelephoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelephoneFocusGained
        if (!telephoneDetector){
            txtTelephone.setCaretPosition(0);
        }
    }//GEN-LAST:event_txtTelephoneFocusGained

    private void txtTelephoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelephoneKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtTelephone.grabFocus();
        }
    }//GEN-LAST:event_txtTelephoneKeyPressed

    private void txtTelephoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelephoneKeyTyped
        txtTelephone.setForeground(Color.DARK_GRAY);
        if (telephoneDetector == false){
            txtTelephone.setText("");
            telephoneDetector = true;
        }
    }//GEN-LAST:event_txtTelephoneKeyTyped

    private void txtSalaryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSalaryKeyTyped
        txtSalary.setForeground(Color.DARK_GRAY);
        if (genderDetector == false){
            txtSalary.setText("");
            genderDetector = true;
        }
    }//GEN-LAST:event_txtSalaryKeyTyped

    private void txtSalaryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSalaryKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtSalary.grabFocus();
        }
    }//GEN-LAST:event_txtSalaryKeyPressed

    private void txtSalaryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSalaryFocusGained
        if (!genderDetector){
            txtSalary.setCaretPosition(0);
        }
    }//GEN-LAST:event_txtSalaryFocusGained

    private void txtSalaryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSalaryFocusLost
        String text = txtSalary.getText().trim();
        if (text.isEmpty()){
            txtSalary.setForeground(new Color(153,153,153));
            txtSalary.setText("Salary");
            genderDetector = false;
        }
    }//GEN-LAST:event_txtSalaryFocusLost

    private void txtEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyTyped
        txtEmail.setForeground(Color.DARK_GRAY);
        if (emailDetector == false){
            txtEmail.setText("");
            emailDetector = true;
        }
    }//GEN-LAST:event_txtEmailKeyTyped

    private void txtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtEmail.grabFocus();
        }
    }//GEN-LAST:event_txtEmailKeyPressed

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        String text = txtEmail.getText().trim();
        if (text.isEmpty()){
            txtEmail.setForeground(new Color(153,153,153));
            txtEmail.setText("Email");
            emailDetector = false;
        }
    }//GEN-LAST:event_txtEmailFocusLost

    private void txtEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusGained
        if (!emailDetector){
            txtEmail.setCaretPosition(0);
        }
    }//GEN-LAST:event_txtEmailFocusGained

    private void rbMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMaleActionPerformed
        rbFemale.setSelected(false);
    }//GEN-LAST:event_rbMaleActionPerformed

    private void rbFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFemaleActionPerformed
        rbMale.setSelected(false);
    }//GEN-LAST:event_rbFemaleActionPerformed

    private void txtAddressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAddressFocusGained
        if (!addressDetector){
            txtAddress.setCaretPosition(0);
        }
    }//GEN-LAST:event_txtAddressFocusGained

    private void txtAddressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAddressFocusLost
        String text = txtAddress.getText().trim();
        if (text.isEmpty()){
            txtAddress.setForeground(new Color(153,153,153));
            txtAddress.setText("Address");
            addressDetector = false;
        }
    }//GEN-LAST:event_txtAddressFocusLost

    private void txtAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtAddress.grabFocus();
        }
    }//GEN-LAST:event_txtAddressKeyPressed

    private void txtAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyTyped
        txtAddress.setForeground(Color.DARK_GRAY);
        if (addressDetector == false){
            txtAddress.setText("");
            addressDetector = true;
        }
    }//GEN-LAST:event_txtAddressKeyTyped

    private void txtDateofBirthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateofBirthFocusGained
        if (!dateofbirthDetector){
            txtDateofBirth.setCaretPosition(0);
        }
    }//GEN-LAST:event_txtDateofBirthFocusGained

    private void txtDateofBirthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateofBirthFocusLost
        String text = txtDateofBirth.getText().trim();
        if (text.isEmpty()){
            txtDateofBirth.setForeground(new Color(153,153,153));
            txtDateofBirth.setText("Date of Birth");
            dateofbirthDetector = false;
        }
    }//GEN-LAST:event_txtDateofBirthFocusLost

    private void txtDateofBirthKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDateofBirthKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtDateofBirth.grabFocus();
        }
    }//GEN-LAST:event_txtDateofBirthKeyPressed

    private void txtDateofBirthKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDateofBirthKeyTyped
        txtDateofBirth.setForeground(Color.DARK_GRAY);
        if (dateofbirthDetector == false){
            txtDateofBirth.setText("");
            dateofbirthDetector = true;
        }
    }//GEN-LAST:event_txtDateofBirthKeyTyped

    PanDateAlwaysOnTop dob;
    private void btnSelectDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectDateActionPerformed
        long millCurrent1 = System.currentTimeMillis();
        dob = new PanDateAlwaysOnTop(null, true);
        dob.setLocation(btnSelectDate);
        dob.setVisible(true);
        long millDOB = dob.getDate().getTime();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");
        txtDateofBirth.setForeground(Color.DARK_GRAY);
        dateofbirthDetector = true;
        txtDateofBirth.setText(simpleDateFormat.format(dob.getDate()));
    }//GEN-LAST:event_btnSelectDateActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        if (created)
            btnClearActionPerformed(null);
        created = false;
        
    }//GEN-LAST:event_formWindowGainedFocus

    private void cbSelectPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSelectPositionActionPerformed


    }//GEN-LAST:event_cbSelectPositionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateStaff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnInsertProfilePhoto;
    private javax.swing.JButton btnSelectDate;
    private javax.swing.JComboBox<String> cbSelectPosition;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbProfilePhoto;
    private javax.swing.JRadioButton rbFemale;
    private javax.swing.JRadioButton rbMale;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtDateofBirth;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private textfieldformajorcineplex.TextFieldForMajorCineplex txtSalary;
    private textfieldformajorcineplex.TextFieldForMajorCineplex txtTelephone;
    // End of variables declaration//GEN-END:variables
}
