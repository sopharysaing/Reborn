/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import static form.CreateMovie.statid;
import plugin.Data;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author MacBookPro
 */
public class CreateMovieConfirm extends javax.swing.JDialog {

    /**
     * Creates new form BooksPayment
     */
    public CreateMovieConfirm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbMoviePoster = new javax.swing.JLabel();
        lbMovieTitle = new javax.swing.JLabel();
        lbRunningTime = new javax.swing.JLabel();
        lbYearReleased = new javax.swing.JLabel();
        lbDirector = new javax.swing.JLabel();
        lbSource = new javax.swing.JLabel();
        lbLanguage = new javax.swing.JLabel();
        movieTitleLabel = new javax.swing.JLabel();
        runningTimeLabel = new javax.swing.JLabel();
        yearReleasedLabel = new javax.swing.JLabel();
        directorLabel = new javax.swing.JLabel();
        sourceLabel = new javax.swing.JLabel();
        languageLabel = new javax.swing.JLabel();
        btnConfirm = new javax.swing.JButton();
        actorLabel = new javax.swing.JLabel();
        lbActor = new javax.swing.JLabel();
        lbGenre = new javax.swing.JLabel();
        lbDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        lbMovieType = new javax.swing.JLabel();
        movieTypeLabel = new javax.swing.JLabel();
        lbSubtitle = new javax.swing.JLabel();
        subtitleLabel = new javax.swing.JLabel();
        lbStatus = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGenre = new javax.swing.JTextArea();
        txttest = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Verify");
        setAlwaysOnTop(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lbMoviePoster.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lbMoviePoster.setForeground(new java.awt.Color(51, 51, 51));
        lbMoviePoster.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMoviePoster.setText("Movie Poster [207 X 300]");
        lbMoviePoster.setPreferredSize(new java.awt.Dimension(300, 207));

        lbMovieTitle.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbMovieTitle.setForeground(new java.awt.Color(51, 51, 51));
        lbMovieTitle.setText("Movie Title");
        lbMovieTitle.setName(""); // NOI18N

        lbRunningTime.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbRunningTime.setForeground(new java.awt.Color(51, 51, 51));
        lbRunningTime.setText("Running Time");
        lbRunningTime.setName(""); // NOI18N

        lbYearReleased.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbYearReleased.setForeground(new java.awt.Color(51, 51, 51));
        lbYearReleased.setText("Year Released");
        lbYearReleased.setName(""); // NOI18N

        lbDirector.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbDirector.setForeground(new java.awt.Color(51, 51, 51));
        lbDirector.setText("Director");
        lbDirector.setName(""); // NOI18N

        lbSource.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbSource.setForeground(new java.awt.Color(51, 51, 51));
        lbSource.setText("Source");
        lbSource.setName(""); // NOI18N

        lbLanguage.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbLanguage.setForeground(new java.awt.Color(51, 51, 51));
        lbLanguage.setText("Language");
        lbLanguage.setName(""); // NOI18N

        movieTitleLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        movieTitleLabel.setForeground(new java.awt.Color(51, 51, 51));
        movieTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        movieTitleLabel.setText("Movie Title");
        movieTitleLabel.setName(""); // NOI18N

        runningTimeLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        runningTimeLabel.setForeground(new java.awt.Color(51, 51, 51));
        runningTimeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        runningTimeLabel.setText("Running Time");
        runningTimeLabel.setName(""); // NOI18N

        yearReleasedLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        yearReleasedLabel.setForeground(new java.awt.Color(51, 51, 51));
        yearReleasedLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        yearReleasedLabel.setText("Year Released");
        yearReleasedLabel.setName(""); // NOI18N

        directorLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        directorLabel.setForeground(new java.awt.Color(51, 51, 51));
        directorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        directorLabel.setText("Director");
        directorLabel.setName(""); // NOI18N

        sourceLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        sourceLabel.setForeground(new java.awt.Color(51, 51, 51));
        sourceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sourceLabel.setText("Source");
        sourceLabel.setName(""); // NOI18N

        languageLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        languageLabel.setForeground(new java.awt.Color(51, 51, 51));
        languageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        languageLabel.setText("Language");
        languageLabel.setName(""); // NOI18N

        btnConfirm.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnConfirm.setForeground(new java.awt.Color(51, 51, 51));
        btnConfirm.setText("Confirm");
        btnConfirm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConfirm.setFocusable(false);
        btnConfirm.setPreferredSize(new java.awt.Dimension(150, 50));
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        actorLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        actorLabel.setForeground(new java.awt.Color(51, 51, 51));
        actorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        actorLabel.setText("Actor");
        actorLabel.setName(""); // NOI18N

        lbActor.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbActor.setForeground(new java.awt.Color(51, 51, 51));
        lbActor.setText("Actor");
        lbActor.setName(""); // NOI18N

        lbGenre.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbGenre.setForeground(new java.awt.Color(51, 51, 51));
        lbGenre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbGenre.setText("Genre");
        lbGenre.setName(""); // NOI18N

        lbDescription.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbDescription.setForeground(new java.awt.Color(51, 51, 51));
        lbDescription.setText("Description");
        lbDescription.setName(""); // NOI18N

        txtDescription.setEditable(false);
        txtDescription.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        txtDescription.setForeground(new java.awt.Color(51, 51, 51));
        txtDescription.setLineWrap(true);
        txtDescription.setRows(1);
        txtDescription.setTabSize(4);
        txtDescription.setText("Description");
        txtDescription.setMargin(new java.awt.Insets(10, 10, 10, 10));
        txtDescription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescriptionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescriptionFocusLost(evt);
            }
        });
        txtDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescriptionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescriptionKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtDescription);

        lbMovieType.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbMovieType.setForeground(new java.awt.Color(51, 51, 51));
        lbMovieType.setText("Movie Type");
        lbMovieType.setName(""); // NOI18N

        movieTypeLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        movieTypeLabel.setForeground(new java.awt.Color(51, 51, 51));
        movieTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        movieTypeLabel.setText("Movie Type");
        movieTypeLabel.setName(""); // NOI18N

        lbSubtitle.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbSubtitle.setForeground(new java.awt.Color(51, 51, 51));
        lbSubtitle.setText("Subtitle");
        lbSubtitle.setName(""); // NOI18N

        subtitleLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        subtitleLabel.setForeground(new java.awt.Color(51, 51, 51));
        subtitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subtitleLabel.setText("Subtitle");
        subtitleLabel.setName(""); // NOI18N

        lbStatus.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lbStatus.setForeground(new java.awt.Color(51, 51, 51));
        lbStatus.setText("Status");
        lbStatus.setName(""); // NOI18N

        statusLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(51, 51, 51));
        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setText("Status");
        statusLabel.setName(""); // NOI18N

        txtGenre.setEditable(false);
        txtGenre.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        txtGenre.setForeground(new java.awt.Color(51, 51, 51));
        txtGenre.setLineWrap(true);
        txtGenre.setRows(1);
        txtGenre.setTabSize(4);
        txtGenre.setText("Genre");
        txtGenre.setMargin(new java.awt.Insets(10, 10, 10, 10));
        txtGenre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGenreFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGenreFocusLost(evt);
            }
        });
        txtGenre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGenreKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGenreKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtGenre);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(145, 145, 145)
                .addComponent(txttest, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbMoviePoster, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbActor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbMovieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbRunningTime, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbYearReleased, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbSource, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(movieTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(runningTimeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(yearReleasedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(directorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(sourceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbMovieType, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(movieTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lbSubtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(subtitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lbLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(languageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbGenre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))))
                .addGap(18, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbMoviePoster, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(movieTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(runningTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yearReleasedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(directorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(sourceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbMovieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbRunningTime, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbYearReleased, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(actorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbActor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbSource, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(movieTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbMovieType, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(languageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subtitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbSubtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttest, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean customerNameDetector = false;
    private boolean customerTelDetector = false;
    private boolean descriptionDetector = false;
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icon/Form Logo.png")));
        try {Image image = ImageIO.read(getClass().getResource(CreateMovie.moviePosterPath));lbMoviePoster.setIcon(new ImageIcon(image));}catch (Exception e){}
        movieTitleLabel.setText(CreateMovie.movieTitle);
        runningTimeLabel.setText(CreateMovie.runningTime);
        yearReleasedLabel.setText(CreateMovie.yearReleased);
        directorLabel.setText(CreateMovie.director);
        actorLabel.setText(CreateMovie.actor);
        sourceLabel.setText(CreateMovie.source);
        statusLabel.setText(CreateMovie.status);
        movieTypeLabel.setText(CreateMovie.movieType);
        txtGenre.setText(CreateMovie.genre);
        languageLabel.setText(CreateMovie.language);
        subtitleLabel.setText(CreateMovie.subtitle);
        txtDescription.setText(CreateMovie.description);
        txttest.setText(String.valueOf(CreateMovie.moiveid));
        txttest.setVisible(Boolean.TRUE);
    }//GEN-LAST:event_formWindowOpened

    private void txtDescriptionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescriptionFocusGained
        if (!descriptionDetector){
            txtDescription.setCaretPosition(0);
        }
    }//GEN-LAST:event_txtDescriptionFocusGained

    private void txtDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescriptionFocusLost
        String text = txtDescription.getText().trim();
        if (text.isEmpty()){
            txtDescription.setForeground(new Color(153,153,153));
            txtDescription.setText("Description");
            descriptionDetector = false;
        }
    }//GEN-LAST:event_txtDescriptionFocusLost

    private void txtDescriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescriptionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtDescription.grabFocus();
        }
    }//GEN-LAST:event_txtDescriptionKeyPressed

    private void txtDescriptionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescriptionKeyTyped
        txtDescription.setForeground(Color.DARK_GRAY);
        if (descriptionDetector == false){
            txtDescription.setText("");
            descriptionDetector = true;
        }
    }//GEN-LAST:event_txtDescriptionKeyTyped

    private void txtGenreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGenreFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenreFocusGained

    private void txtGenreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGenreFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenreFocusLost

    private void txtGenreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGenreKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenreKeyPressed

    private void txtGenreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGenreKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenreKeyTyped

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        CreateMovie.movieType = "";
        CreateMovie.genre = "";
    
        
    
        
    
        
    }//GEN-LAST:event_formWindowClosing

   
                
              
        

    
    
    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        try {
            String movieTitle = movieTitleLabel.getText().trim();
            String runningTime = runningTimeLabel.getText().trim();
            String yearReleased = yearReleasedLabel.getText().trim();
            String director = directorLabel.getText().trim();
            String actor = actorLabel.getText().trim();
            String source = sourceLabel.getText().trim();
            String description = txtDescription.getText().trim();
            String genre = txtGenre.getText().trim();
            int MovieID = CreateMovie.moiveid;
            int MTID = CreateMovie.motyid;
            int Mstatus= CreateMovie.mstat; //<< language ID
            int status = CreateMovie.statid;
            
            

                    

            
        
    String query = " insert into tblmovie (MovieID,MovieTitle,Runningtime,YearReleased,Director,Actor,Source,Description,khmerSubtitle,englishSubtitle,moviePoster,MovieTypeID,Genre,LanguageID,StatusID)"
        + " values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);";

      // create the mysql insert preparedstatement
            PreparedStatement ppst = Data.getDataConnection().prepareStatement(query);
      ppst.setInt(1, MovieID);
      ppst.setString (2, movieTitle);
      ppst.setString (3, runningTime);
      ppst.setString (4, yearReleased);
      ppst.setString (5, director);
      ppst.setString (6, actor);
      ppst.setString (7, source);
      ppst.setString (8, description);
      ppst.setString (9, CreateMovie.khmerSubtitlePath);
      ppst.setString (10,CreateMovie.englishSubtitlePath);
      ppst.setString (11,CreateMovie.moviePosterPath);
      ppst.setInt    (12, MTID);
      ppst.setString (13, genre);
      ppst.setInt    (14, Mstatus);
      ppst.setInt    (15, status);

      // execute the preparedstatement
      ppst.execute();
            

            
      ppst.close();
            
            

            CreateMovie.created = true;
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateMovieConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateMovieConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateMovieConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateMovieConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new CreateStaffConfirm().setVisible(true);
                CreateMovieConfirm dialog = new CreateMovieConfirm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel actorLabel;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JLabel directorLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel languageLabel;
    private javax.swing.JLabel lbActor;
    private javax.swing.JLabel lbDescription;
    private javax.swing.JLabel lbDirector;
    private javax.swing.JLabel lbGenre;
    private javax.swing.JLabel lbLanguage;
    private javax.swing.JLabel lbMoviePoster;
    private javax.swing.JLabel lbMovieTitle;
    private javax.swing.JLabel lbMovieType;
    private javax.swing.JLabel lbRunningTime;
    private javax.swing.JLabel lbSource;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JLabel lbSubtitle;
    private javax.swing.JLabel lbYearReleased;
    private javax.swing.JLabel movieTitleLabel;
    private javax.swing.JLabel movieTypeLabel;
    private javax.swing.JLabel runningTimeLabel;
    private javax.swing.JLabel sourceLabel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel subtitleLabel;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextArea txtGenre;
    private javax.swing.JTextField txttest;
    private javax.swing.JLabel yearReleasedLabel;
    // End of variables declaration//GEN-END:variables
}
